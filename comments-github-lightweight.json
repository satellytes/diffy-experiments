[
  {
    "diff_hunk": "@@ -16,10 +20,23 @@ body {\n   outline: 2px solid green;\n }\n \n-.paragraph {\n-  font-size:  16px;\n+// issue1: nesting\n+body {\n+  .product {\n+    .product-imag {\n+      .paragraph {\n+        font-size:  1rem;\n+      }\n+    }\n+  }",
    "path": "my.css",
    "position": 27,
    "original_position": 27,
    "body": "A nifty set of problems coming from this innocent idea of organizing the content in neat blocks of css.\r\n\r\n**Problem 1: (DOM mirroring)**\r\nThis is exactly replicating the DOM structure which makes the CSS very dependent of the markup\r\nwhich will cause trouble in the future.\r\n\r\n**Problem 2: (Too much nesting)**\r\nThis is nesting for no reason, the flat version would work too\r\nwhich would also prevent the high cognitive load on the reader's mind\r\nwho constantly need to resolve the full and normalized selector\r\n\r\n**Problem 3: (over-specificity)**\r\nBy using such a deep nesting it's also over specifying the target for no reason. A simple .header-link ",
    "start_line": 24,
    "original_start_line": 24,
    "start_side": "RIGHT",
    "line": 31,
    "original_line": 31,
    "side": "RIGHT"
  },
  {
    "diff_hunk": "@@ -16,10 +20,23 @@ body {\n   outline: 2px solid green;\n }\n \n-.paragraph {\n-  font-size:  16px;\n+// issue1: nesting\n+body {\n+  .product {\n+    .product-imag {\n+      .paragraph {\n+        font-size:  1rem;\n+      }\n+    }\n+  }\n }\n \n-.layout {\n+// over specifiy, creates the same issues as nesting actually\n+body .product .product-image .layout {",
    "path": "my.css",
    "position": 32,
    "original_position": 32,
    "body": "This is actually very related to nesting selector. Such a over-specificity creates a binding to the DOM and it's creating a css statement with a specificity being too high `0 - 4 - 1` (4x class, 1 element)",
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "diff_hunk": "@@ -16,10 +20,23 @@ body {\n   outline: 2px solid green;\n }\n \n-.paragraph {\n-  font-size:  16px;\n+// issue1: nesting\n+body {\n+  .product {\n+    .product-imag {\n+      .paragraph {\n+        font-size:  1rem;\n+      }\n+    }\n+  }\n }\n \n-.layout {\n+// over specifiy, creates the same issues as nesting actually\n+body .product .product-image .layout {\n   float: left;\n-}\n\\ No newline at end of file\n+}\n+\n+// Issue: deadly specificity (!important)\n+.product-image {\n+  outline: 20px solid red !important;\n+}",
    "path": "my.css",
    "position": 41,
    "original_position": 41,
    "body": "Easy rule: Never ever use important. There are only very, very few reasons to use such a monster of specificity. One could be to overrule inline styles `1-0-0-0` vs the higher important specificity `1-0-0-0-0`. But if you can control the content of the inline style: just fix that, don't make it worse. ",
    "start_line": 40,
    "original_start_line": 40,
    "start_side": "RIGHT",
    "line": 42,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "diff_hunk": "@@ -1,6 +1,10 @@\n+html {\n+  font-size: 16px; \n+}\n+\n+// magic number\n body {\n-  background: #000000;\n-  font-size:  12px;\n+  background: #123456;",
    "path": "my.css",
    "position": 9,
    "original_position": 9,
    "body": "This is a magic number. Where does this come from?\r\nA CSS variable can help here if supported by the project. Otherwise a comment or a sass variable if such a code is used in an environment supporting them.",
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 7,
    "original_line": 7,
    "side": "RIGHT"
  },
  {
    "diff_hunk": "@@ -1,6 +1,10 @@\n+html {\n+  font-size: 16px; \n+}\n+",
    "path": "my.css",
    "position": 4,
    "original_position": 4,
    "body": "this is the base font-size for the `rem` introduced. One big problem: This pins the entire website to 16px and creates a major accessibility problem. This will override any customized font from the browser which is usually use as the base (and usually matches 16px anyway). You should use percentage values here and relate on that common standard of having 16px as the base font size of the browser.\r\n\r\nPeople can typically still resize with zoom text in/out but the browser base font-size is disabled with that so it's not the best to introduce.",
    "start_line": 1,
    "original_start_line": 1,
    "start_side": "RIGHT",
    "line": 4,
    "original_line": 4,
    "side": "RIGHT"
  }
]
